{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnoughtFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb2bb589908b877b049a489728dfab90e61bac75d5865de2905e017f1b3f18cd3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "903843",
    "logsBloom": "0x
    "blockHash": "0x03ad7a017f4019ce9d98e0e8fe53b9b0a3aaf08558b4d65c80a0157630636e1d",
    "transactionHash": "0xb2bb589908b877b049a489728dfab90e61bac75d5865de2905e017f1b3f18cd3",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "903843",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "2a6384ef59416f1fd74ae4621553ecca",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughtFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Ben BK\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner();\\r\\nerror FundMe__NotEnoughtFunds();\\r\\nerror FundMe__CallFailed();\\r\\n\\r\\n/**\\r\\n * @title A contract for crowd funding\\r\\n * @author Ben BK\\r\\n * @notice This contract is to demo a sample funding contract\\r\\n * @dev This implements price feeds as our library\\r\\n */\\r\\ncontract FundMe {\\r\\n\\r\\n    using PriceConverter for uint256;\\r\\n    // \\\"constant\\\" saves gaz\\r\\n    //s_ to say it's a storage variable\\r\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\r\\n    address[] public s_funders;\\r\\n    mapping(address => uint256) public s_addressToAmountFunded;\\r\\n    // \\\"immutable\\\" saves gaz\\r\\n    address public immutable i_owner;\\r\\n\\r\\n    AggregatorV3Interface public s_priceFeed;\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        //require(msg.sender == i_owner, \\\"Not the owner\\\");\\r\\n        if(msg.sender != i_owner) { revert FundMe__NotOwner(); }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    //What happens if someone sends this contract ETH without calling the fund function\\r\\n    // receive() to send a transaction\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    // fallback() to send datas\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice This function funds this contract\\r\\n     */\\r\\n    function fund() public payable {\\r\\n        //require(msg.value.getConversionRate() >= MINIMUM_USD, \\\"Didnt't send enought\\\"); // 1e18 = 1 ether\\r\\n        if(msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) { revert FundMe__NotEnoughtFunds(); }\\r\\n        s_funders.push(msg.sender);\\r\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for(uint256 funderIndex = 0 ; funderIndex < s_funders.length ; funderIndex++) {\\r\\n            address funder = s_funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        // reset the array\\r\\n        s_funders = new address[](0);\\r\\n        // withdraw the funds\\r\\n        // transfer\\r\\n        //payable(msg.sender).transfer(address(this).balance);\\r\\n        // send\\r\\n        //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        //require(sendSuccess, \\\"Send failed\\\");\\r\\n        // call\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        //require(callSuccess, \\\"Call failed\\\");\\r\\n        if(!callSuccess) { revert FundMe__CallFailed(); }\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public payable onlyOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n        //mappings can't be in memory \\r\\n        for(uint256 funderIndex = 0 ; \\r\\n            funderIndex < funders.length ; \\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        (bool success,) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0xb45abaf38d17ffd7742e23f13f119572e8229f5b68dc1f177e772c5ff8bb008a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint) {\\r\\n        (,int price,,,) = priceFeed.latestRoundData();\\r\\n        // ETH in terms of USD\\r\\n        //Solidity n'a pas de d\\u00e9cimales, donc on doit faire des math\\u00e9matiques pour les obtenir\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0xcb5e6e0ebe00be531f586d9f8d9cba54541b3ba8e1704bfa623ef31383f334e3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010693803806200106983398181016040528101906100349190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b608051610ef9620001706000396000818161031e015281816105a101528181610797015261082f0152610ef96000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102de565b6040516100ba9190610a44565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610aa2565b610304565b6040516100f79190610ae8565b60405180910390f35b34801561010c57600080fd5b5061011561031c565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b2f565b610553565b60405161014b9190610b6b565b60405180910390f35b34801561016057600080fd5b50610169610592565b6040516101769190610ae8565b60405180910390f35b6101876101be565b005b61019161059f565b005b34801561019f57600080fd5b506101a861082d565b6040516101b59190610b6b565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085190919063ffffffff16565b1015610235576040517fc0f0b84400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561044c5760008082815481106103c6576103c5610b86565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044490610be4565b9150506103a4565b50600067ffffffffffffffff81111561046857610467610c2c565b5b6040519080825280602002602001820160405280156104965781602001602082028036833780820191505090505b50600090805190602001906104ac92919061091e565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d390610c8c565b60006040518083038185875af1925050503d8060008114610510576040519150601f19603f3d011682016040523d82523d6000602084013e610515565b606091505b5050905080610550576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000818154811061056357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610624576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106a757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161065d575b5050505050905060005b81518110156107325760008282815181106106cf576106ce610b86565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072a90610be4565b9150506106b1565b50600067ffffffffffffffff81111561074e5761074d610c2c565b5b60405190808252806020026020018201604052801561077c5781602001602082028036833780820191505090505b506000908051906020019061079292919061091e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107d990610c8c565b60006040518083038185875af1925050503d8060008114610816576040519150601f19603f3d011682016040523d82523d6000602084013e61081b565b606091505b505090508061082957600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061085d8361088d565b90506000670de0b6b3a764000085836108769190610ca1565b6108809190610d12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190610dd0565b5050509150506402540be400816109169190610e4b565b915050919050565b828054828255906000526020600020908101928215610997579160200282015b828111156109965782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061093e565b5b5090506109a491906109a8565b5090565b5b808211156109c15760008160009055506001016109a9565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a0a610a05610a00846109c5565b6109e5565b6109c5565b9050919050565b6000610a1c826109ef565b9050919050565b6000610a2e82610a11565b9050919050565b610a3e81610a23565b82525050565b6000602082019050610a596000830184610a35565b92915050565b600080fd5b6000610a6f826109c5565b9050919050565b610a7f81610a64565b8114610a8a57600080fd5b50565b600081359050610a9c81610a76565b92915050565b600060208284031215610ab857610ab7610a5f565b5b6000610ac684828501610a8d565b91505092915050565b6000819050919050565b610ae281610acf565b82525050565b6000602082019050610afd6000830184610ad9565b92915050565b610b0c81610acf565b8114610b1757600080fd5b50565b600081359050610b2981610b03565b92915050565b600060208284031215610b4557610b44610a5f565b5b6000610b5384828501610b1a565b91505092915050565b610b6581610a64565b82525050565b6000602082019050610b806000830184610b5c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bef82610acf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c2157610c20610bb5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c76600083610c5b565b9150610c8182610c66565b600082019050919050565b6000610c9782610c69565b9150819050919050565b6000610cac82610acf565b9150610cb783610acf565b9250828202610cc581610acf565b91508282048414831517610cdc57610cdb610bb5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1d82610acf565b9150610d2883610acf565b925082610d3857610d37610ce3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6281610d43565b8114610d6d57600080fd5b50565b600081519050610d7f81610d59565b92915050565b6000819050919050565b610d9881610d85565b8114610da357600080fd5b50565b600081519050610db581610d8f565b92915050565b600081519050610dca81610b03565b92915050565b600080600080600060a08688031215610dec57610deb610a5f565b5b6000610dfa88828901610d70565b9550506020610e0b88828901610da6565b9450506040610e1c88828901610dbb565b9350506060610e2d88828901610dbb565b9250506080610e3e88828901610d70565b9150509295509295909350565b6000610e5682610d85565b9150610e6183610d85565b9250828202610e6f81610d85565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ea757610ea6610bb5565b5b8282058414831517610ebc57610ebb610bb5565b5b509291505056fea26469706673582212207aecfef58ac75c144d065ed452957cccad8a7a3df432e05248ea04a90e80bdac64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101935761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102de565b6040516100ba9190610a44565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610aa2565b610304565b6040516100f79190610ae8565b60405180910390f35b34801561010c57600080fd5b5061011561031c565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b2f565b610553565b60405161014b9190610b6b565b60405180910390f35b34801561016057600080fd5b50610169610592565b6040516101769190610ae8565b60405180910390f35b6101876101be565b005b61019161059f565b005b34801561019f57600080fd5b506101a861082d565b6040516101b59190610b6b565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085190919063ffffffff16565b1015610235576040517fc0f0b84400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561044c5760008082815481106103c6576103c5610b86565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044490610be4565b9150506103a4565b50600067ffffffffffffffff81111561046857610467610c2c565b5b6040519080825280602002602001820160405280156104965781602001602082028036833780820191505090505b50600090805190602001906104ac92919061091e565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d390610c8c565b60006040518083038185875af1925050503d8060008114610510576040519150601f19603f3d011682016040523d82523d6000602084013e610515565b606091505b5050905080610550576040517fa6139a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000818154811061056357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610624576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106a757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161065d575b5050505050905060005b81518110156107325760008282815181106106cf576106ce610b86565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072a90610be4565b9150506106b1565b50600067ffffffffffffffff81111561074e5761074d610c2c565b5b60405190808252806020026020018201604052801561077c5781602001602082028036833780820191505090505b506000908051906020019061079292919061091e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107d990610c8c565b60006040518083038185875af1925050503d8060008114610816576040519150601f19603f3d011682016040523d82523d6000602084013e61081b565b606091505b505090508061082957600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061085d8361088d565b90506000670de0b6b3a764000085836108769190610ca1565b6108809190610d12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190610dd0565b5050509150506402540be400816109169190610e4b565b915050919050565b828054828255906000526020600020908101928215610997579160200282015b828111156109965782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061093e565b5b5090506109a491906109a8565b5090565b5b808211156109c15760008160009055506001016109a9565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a0a610a05610a00846109c5565b6109e5565b6109c5565b9050919050565b6000610a1c826109ef565b9050919050565b6000610a2e82610a11565b9050919050565b610a3e81610a23565b82525050565b6000602082019050610a596000830184610a35565b92915050565b600080fd5b6000610a6f826109c5565b9050919050565b610a7f81610a64565b8114610a8a57600080fd5b50565b600081359050610a9c81610a76565b92915050565b600060208284031215610ab857610ab7610a5f565b5b6000610ac684828501610a8d565b91505092915050565b6000819050919050565b610ae281610acf565b82525050565b6000602082019050610afd6000830184610ad9565b92915050565b610b0c81610acf565b8114610b1757600080fd5b50565b600081359050610b2981610b03565b92915050565b600060208284031215610b4557610b44610a5f565b5b6000610b5384828501610b1a565b91505092915050565b610b6581610a64565b82525050565b6000602082019050610b806000830184610b5c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bef82610acf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c2157610c20610bb5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c76600083610c5b565b9150610c8182610c66565b600082019050919050565b6000610c9782610c69565b9150819050919050565b6000610cac82610acf565b9150610cb783610acf565b9250828202610cc581610acf565b91508282048414831517610cdc57610cdb610bb5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1d82610acf565b9150610d2883610acf565b925082610d3857610d37610ce3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6281610d43565b8114610d6d57600080fd5b50565b600081519050610d7f81610d59565b92915050565b6000819050919050565b610d9881610d85565b8114610da357600080fd5b50565b600081519050610db581610d8f565b92915050565b600081519050610dca81610b03565b92915050565b600080600080600060a08688031215610dec57610deb610a5f565b5b6000610dfa88828901610d70565b9550506020610e0b88828901610da6565b9450506040610e1c88828901610dbb565b9350506060610e2d88828901610dbb565b9250506080610e3e88828901610d70565b9150509295509295909350565b6000610e5682610d85565b9150610e6183610d85565b9250828202610e6f81610d85565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ea757610ea6610bb5565b5b8282058414831517610ebc57610ebb610bb5565b5b509291505056fea26469706673582212207aecfef58ac75c144d065ed452957cccad8a7a3df432e05248ea04a90e80bdac64736f6c63430008110033",
  "devdoc": {
    "author": "Ben BK",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}